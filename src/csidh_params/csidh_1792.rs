use crypto_bigint::{impl_modulus, modular::ConstMontyForm, Uint};

use super::CsidhParams;

#[cfg(target_pointer_width = "32")]
pub const LIMBS: usize = 56;
#[cfg(target_pointer_width = "64")]
/// Number of limbs used to store public keys and shared secrets in CSIDH-1792
pub const LIMBS: usize = 28;

/// Number of prime numbers used for CSIDH-1792
pub const N: usize = 201;

impl_modulus!(
    MOD,
    Uint<LIMBS>,
    "c834b95a843e9915f18fa61bbaec899a64eeaa69a5fca02506be588b823f288602d1bf582cbe08dcbb9967554\
    6a301a13010d40ed23489b890015d7e1b44024e356cd78518b16005a4cceac17964448ac53435e28dc76c933d7\
    5e319c1fda37dc8c8bf7f17106def3b9048648cfa7449e65e089ae1fa3ab5c335ff012c2bd0c6e98885c18458f\
    6ad95e8a142f951cd01806ddf63e695c7041e69dd2da6d48fc2e3a67ee40d039878aaea7abfa49b414968a285a\
    57144a5210cbca971107497ada777973c3d3173f16f9412e3d829d25b17ab71542c1d82fcc534b72aabb11be3"
);

impl CsidhParams<LIMBS, N, MOD> {
    /// A proposition for CSIDH-1792.
    pub const CSIDH_1792: CsidhParams<LIMBS, N, MOD> = CsidhParams {
        lis: [
            37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127,
            131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223,
            227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,
            317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421,
            431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523,
            541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641,
            643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,
            757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863,
            877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991,
            997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087,
            1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187,
            1193, 1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289,
            1291, 1301, 1657,
        ],
        p_minus_1_over_2: Uint::from_be_hex(
            "641a5cad421f4c8af8c7d30ddd7644cd32775534d2fe5012835f2c45c11f94430168dfac16\
            5f046e5dccb3aaa35180d098086a07691a44dc4800aebf0da201271ab66bc28c58b002d2667\
            560bcb22245629a1af146e3b6499ebaf18ce0fed1bee4645fbf8b8836f79dc82432467d3a24\
            f32f044d70fd1d5ae19aff809615e86374c442e0c22c7b56caf450a17ca8e680c036efb1f34\
            ae3820f34ee96d36a47e171d33f720681cc3c55753d5fd24da0a4b45142d2b8a25290865e54\
            b8883a4bd6d3bbcb9e1e98b9f8b7ca0971ec14e92d8bd5b8aa160ec17e629a5b9555d88df1",
        ),
        inverse_of_4: ConstMontyForm::new(&Uint::from_be_hex(
            "320d2e56a10fa6457c63e986eebb2266993baa9a697f280941af9622e08fca2180b46fd60b\
            2f82372ee659d551a8c0684c043503b48d226e2400575f86d100938d5b35e1462c580169333\
            ab05e591122b14d0d78a371db24cf5d78c6707f68df72322fdfc5c41b7bcee41219233e9d12\
            79978226b87e8ead70cd7fc04b0af431ba62217061163dab657a2850be547340601b77d8f9a\
            571c1079a774b69b523f0b8e99fb90340e61e2aba9eafe926d0525a28a1695c512948432f2a\
            5c441d25eb69dde5cf0f4c5cfc5be504b8f60a7496c5eadc550b0760bf314d2dcaaaec46f9",
        )),
        sqrt_of_p_times_4: Uint::from_be_hex(
            "00000000000000000000000000000000000000000000000000000000000000000000000000\
            000000000000000000000000000000000000000000000000000000000000000000000000000\
            000000000000000000000000000000000000000000000000000000000000000000000000003\
            8990052e73e9fb137778a2c8553d92bbe1abf6a3dbc42958ab43df8593c5c3a283e612ce65a\
            b290281ee56969fe3a0cd77a34926f2b21475b400ad2da4aa23668cf988de4f99ff9aa0ab4b\
            ca581ea99cfdf4a7cf03d270dbc49ccbb20d94d84eae8c9ed15e611d72f0bd5782773c19f7",
        ),
    };
}
